name: Build scrt

on:
  push:
    branches:
      - "main"
    tags-ignore:
      - "*"
  pull_request:
    branches:
      - "**"

jobs:
  # build_docker_e2e_images:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Build Git test container
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         tags: ghcr.io/${{ github.repository_owner }}/scrt-git-test:latest
  #         push: true

  lint:
    runs-on: ubuntu-latest
    container: golangci/golangci-lint:v1.39-alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Run linters
        run: golangci-lint run

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Test
        run: go test -race -covermode=atomic -coverprofile=coverage.out ./...
      - name: Convert coverage.out to coverage.lcov
        uses: jandelgado/gcov2lcov-action@v1.0.6
      - name: Coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

  e2e:
    runs-on: ubuntu-latest
    services:
      minio:
        # Use Bitnami image here because default minio image runs the executable
        # and GitHub actions won't let us pass args to docker create so we can't
        # change the entrypoint
        image: bitnami/minio
        options: --name=minio
        ports:
          - 9000:9000
      git:
        image: linuxserver/openssh-server
        options: '--env PUBLIC_KEY_FILE="/config/scrt_id_rsa.pub" --env USER_NAME=scrt --name=scrt-git'
        ports:
          - 2222:2222
        volumes:
          - "/home/runner/work/_temp/repos:/config/repos"
          - "/home/runner/work/_temp/scrt_id_rsa.pub:/config/scrt_id_rsa.pub"
    # needs:
    #   - lint
    #   - build_docker_e2e_images
    steps:
      # Prepare MinIO
      - name: Create test bucket
        run: docker exec minio mkdir -p /data/test-bucket
      # Prepare Git
      - name: Create git repo
        run: |
          cd /home/runner/work/_temp/repos \
          && git config --global init.defaultBranch main \
          && git init --bare scrt-test.git
      - name: Add public SSH key to container
        run: 'echo "${{ secrets.SCRT_ID_RSA_PUB }}" > /home/runner/work/_temp/scrt_id_rsa.pub'
      - name: Add private SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SCRT_ID_RSA }}
          name: scrt_id_rsa
          config: |
            Host scrt-git-test
              HostName 127.0.0.1
              Port 2222
              User scrt
              IdentityFile ~/.ssh/scrt_id_rsa
      # Run tests
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Run tests
        env:
          SCRT_TEST_E2E: y
          SCRT_TEST_E2E_S3_ENDPOINT_URL: http://127.0.0.1:9000
          SCRT_TEST_E2E_S3_REGION: us-east-1
          SCRT_TEST_E2E_GIT_REPOSITORY_URL: scrt@scrt-git-test:repos/scrt-test.git
          AWS_ACCESS_KEY_ID: minio
          AWS_SECRET_ACCESS_KEY: miniosecret
        run: go test ./e2e

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Build
        run: go build -v .
