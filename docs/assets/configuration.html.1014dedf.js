import{_ as c,r as a,o as r,c as l,a as e,b as n,w as d,d as t,e as o}from"./app.256a5158.js";const p={},u=t('<h1 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h1><p>Repeating the global options each time the <code>scrt</code> command is invoked can be verbose. Also, some options \u2014 like the store password \u2014 shouldn&#39;t be used on the command line on a shared computer, to avoid security issues.</p><p>To prevent this, scrt can be configured with a configuration file or using environment variables.</p><p><code>scrt</code> configuration settings follow an order of precedence. Each item takes precedence over the item below it:</p><ul><li>command-line flags</li><li>environment variables</li><li>configuration file</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Configuration options can be considered to be chosen from &quot;most explicit&quot; (flags) to &quot;least explicit&quot; (configuration file).</p></div><h2 id="configuration-file" tabindex="-1"><a class="header-anchor" href="#configuration-file" aria-hidden="true">#</a> Configuration file</h2>',7),h=o("The "),f=e("code",null,"scrt",-1),g=o(" configuration file is a "),m={href:"https://yaml.org/",target:"_blank",rel:"noopener noreferrer"},_=o("YAML"),v=o(" file with the configuration options as keys."),b=t(`<p>Example:</p><div class="language-yaml ext-yml"><pre class="language-yaml"><code><span class="token key atrule">storage</span><span class="token punctuation">:</span> local
<span class="token key atrule">password</span><span class="token punctuation">:</span> p4ssw0rd
<span class="token key atrule">local</span><span class="token punctuation">:</span>
  <span class="token key atrule">path</span><span class="token punctuation">:</span> store.scrt
</code></pre></div><p>If the <code>--config</code> option is given to the command line, <code>scrt</code> will try to load the configuration from a file at the given path. Otherwise, it looks for any file named <code>.scrt</code>, <code>.scrt.yml</code> or <code>.scrt.yaml</code> in the current working directory, then recursively in the parent directory up to the root of the filesystem. If such a file is found, its values are loaded as configuration.</p><p>This can be useful in configuring the location of a store for a project. By adding a <code>.scrt</code> file at the root of the project repository. <code>scrt</code> can then be used in CI and other DevOps tools.</p><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>Don&#39;t add the password to a configuration file in a shared git repository!</p></div><p>Storage type (<code>storage</code>) can be ignored in a configuration file. <code>scrt</code> will read the configuration under the key for the storage type (e.g. <code>local:</code>). <em>Defining configurations for multiple storage types in a single file will result in undefined behavior.</em></p><h2 id="environment-variables" tabindex="-1"><a class="header-anchor" href="#environment-variables" aria-hidden="true">#</a> Environment variables</h2><p>Each global option has an environment variable counterpart. Environment variables use the same name as the configuration option, in uppercase letters, prefixed with <code>SCRT_</code>.</p><ul><li><code>storage</code> \u21D2 <code>SCRT_STORAGE</code></li><li><code>password</code> \u21D2 <code>SCRT_PASSWORD</code></li><li><code>local-path</code> \u21D2 <code>SCRT_LOCAL_PATH</code></li></ul><p>To configure a default store on your system, add the following to your <code>.bashrc</code> file (if using <code>bash</code>):</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">SCRT_STORAGE</span><span class="token operator">=</span>local
<span class="token builtin class-name">export</span> <span class="token assign-left variable">SCRT_PASSWORD</span><span class="token operator">=</span>p4ssw0rd
<span class="token builtin class-name">export</span> <span class="token assign-left variable">SCRT_LOCAL_PATH</span><span class="token operator">=~</span>/.scrt/store.scrt
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Refer to your shell interpreter&#39;s documentation to set environment variables if you don&#39;t use <code>bash</code> (<code>zsh</code>, <code>dash</code>, <code>tcsh</code>, etc.)</p></div><h4 id="related-pages" tabindex="-1"><a class="header-anchor" href="#related-pages" aria-hidden="true">#</a> Related pages</h4>`,13),k=o("Reference > Configuration");function y(x,w){const s=a("ExternalLinkIcon"),i=a("RouterLink");return r(),l("div",null,[u,e("p",null,[h,f,g,e("a",m,[_,n(s)]),v]),b,e("ul",null,[e("li",null,[n(i,{to:"/reference/configuration/"},{default:d(()=>[k]),_:1})])])])}var T=c(p,[["render",y],["__file","configuration.html.vue"]]);export{T as default};
