import{_ as i,r as t,o as c,c as l,a,b as n,w as d,F as h,d as s,e}from"./app.a4dacedd.js";const p={},g=s(`<h1 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><p>This examples in this section will help you set up and start using scrt with a store in a local file.</p><h2 id="initialization" tabindex="-1"><a class="header-anchor" href="#initialization" aria-hidden="true">#</a> Initialization</h2><p>Initialize a new store, with <code>scrt init</code></p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt init --storage<span class="token operator">=</span>local <span class="token punctuation">\\</span>
          --password<span class="token operator">=</span>p4ssw0rd <span class="token punctuation">\\</span>
          --local-path<span class="token operator">=</span>store.scrt
</code></pre></div>`,5),u=e("This will create an empty store, in a "),m=a("code",null,"store.scrt",-1),b=e(" file. The file is encrypted using a secret key derived from the given password. (The password in these examples is very weak. In a production setting, do not use such a simple password. Follow the "),_={href:"https://auth0.com/blog/dont-pass-on-the-new-nist-password-guidelines/",target:"_blank",rel:"noopener noreferrer"},f=e("NIST recommandations"),k=e(" for good password creation.)"),v=s(`<div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>The password is the key to all your secrets. If you lose your password, there is no way to recover your secrets.</p></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><p>Set your configuration in environment variables, so you don&#39;t have to type them out each time you run a command.</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">SCRT_STORAGE</span><span class="token operator">=</span>local
<span class="token builtin class-name">export</span> <span class="token assign-left variable">SCRT_PASSWORD</span><span class="token operator">=</span>p4ssw0rd
<span class="token builtin class-name">export</span> <span class="token assign-left variable">SCRT_LOCAL_PATH</span><span class="token operator">=</span>store.scrt
</code></pre></div>`,4),x=e("In the following examples, we assume the environment variables have been set. See the "),w=e("Configuration reference"),y=e(" for advanced configuration options."),S=s(`<h2 id="using-the-store" tabindex="-1"><a class="header-anchor" href="#using-the-store" aria-hidden="true">#</a> Using the store</h2><h3 id="setting-and-retrieving" tabindex="-1"><a class="header-anchor" href="#setting-and-retrieving" aria-hidden="true">#</a> Setting and retrieving</h3><p>Set and retrieve a value for a key using <code>scrt set</code> and <code>scrt get</code></p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt <span class="token builtin class-name">set</span> hello <span class="token string">&#39;World!&#39;</span>
scrt get hello

<span class="token comment"># Output: World!</span>
</code></pre></div><h3 id="adding-more-secrets" tabindex="-1"><a class="header-anchor" href="#adding-more-secrets" aria-hidden="true">#</a> Adding more secrets</h3><p>Add another secret by using <code>scrt set</code> for another key</p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt <span class="token builtin class-name">set</span> barbes <span class="token string">&#39;rochechouart&#39;</span>
scrt get barbes

<span class="token comment"># Output: rochechouart</span>
</code></pre></div><h3 id="updating" tabindex="-1"><a class="header-anchor" href="#updating" aria-hidden="true">#</a> Updating</h3><p>Update a secret with <code>scrt set</code> for an existing key</p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt <span class="token builtin class-name">set</span> hello <span class="token string">&#39;Brooklyn&#39;</span>
scrt get hello

<span class="token comment"># Output: Brooklyn</span>
</code></pre></div><h3 id="deleting" tabindex="-1"><a class="header-anchor" href="#deleting" aria-hidden="true">#</a> Deleting</h3><p>Delete a secret with <code>scrt unset</code></p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt <span class="token builtin class-name">unset</span> hello
scrt get hello

<span class="token comment"># Error: no value for key: &quot;hello&quot;</span>
</code></pre></div><h2 id="getting-help" tabindex="-1"><a class="header-anchor" href="#getting-help" aria-hidden="true">#</a> Getting help</h2><p>Get more information about scrt commands with</p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt --help
</code></pre></div><h3 id="storage-options" tabindex="-1"><a class="header-anchor" href="#storage-options" aria-hidden="true">#</a> Storage options</h3><p>scrt supports several storage backends. Find out more about the storage options with</p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt storage
</code></pre></div>`,19);function T(I,C){const o=t("ExternalLinkIcon"),r=t("RouterLink");return c(),l(h,null,[g,a("p",null,[u,m,b,a("a",_,[f,n(o)]),k]),v,a("p",null,[x,n(r,{to:"/guide/configuration.html"},{default:d(()=>[w]),_:1}),y]),S],64)}var A=i(p,[["render",T],["__file","getting-started.html.vue"]]);export{A as default};
