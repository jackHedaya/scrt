import{_ as l,r,o as c,c as d,a as e,b as s,w as n,d as o,e as a}from"./app.256a5158.js";const h={},p=o(`<h1 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><p>This examples in this section will help you set up and start using scrt with a store in a local file.</p><h2 id="initialization" tabindex="-1"><a class="header-anchor" href="#initialization" aria-hidden="true">#</a> Initialization</h2><p>Initialize a new store, with <code>scrt init</code></p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt init --storage<span class="token operator">=</span>local <span class="token punctuation">\\</span>
          --password<span class="token operator">=</span>p4ssw0rd <span class="token punctuation">\\</span>
          --local-path<span class="token operator">=</span>store.scrt
</code></pre></div>`,5),u=a("This will create an empty store, in a "),g=e("code",null,"store.scrt",-1),_=a(" file. The file is encrypted using a secret key derived from the given password. (The password in these examples is very weak. In a production setting, do not use such a simple password. Follow the "),f={href:"https://auth0.com/blog/dont-pass-on-the-new-nist-password-guidelines/",target:"_blank",rel:"noopener noreferrer"},m=a("NIST recommandations"),b=a(" for good password creation.)"),k=e("div",{class:"custom-container warning"},[e("p",{class:"custom-container-title"},"WARNING"),e("p",null,"The password is the key to all your secrets. If you lose your password, there is no way to recover your secrets.")],-1),v=e("h4",{id:"related-pages",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#related-pages","aria-hidden":"true"},"#"),a(" Related pages")],-1),x=a("Reference > Commands > init"),w=o(`<h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><p>Set your configuration in environment variables, so you don&#39;t have to type them out each time you run a command.</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">SCRT_STORAGE</span><span class="token operator">=</span>local
<span class="token builtin class-name">export</span> <span class="token assign-left variable">SCRT_PASSWORD</span><span class="token operator">=</span>p4ssw0rd
<span class="token builtin class-name">export</span> <span class="token assign-left variable">SCRT_LOCAL_PATH</span><span class="token operator">=</span>store.scrt
</code></pre></div>`,3),y=a("In the following examples, we assume the environment variables have been set. See the "),R=a("Configuration reference"),S=a(" for advanced configuration options."),C=e("h4",{id:"related-pages-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#related-pages-1","aria-hidden":"true"},"#"),a(" Related pages")],-1),T=a("Reference > Configuration"),I=o(`<h2 id="using-the-store" tabindex="-1"><a class="header-anchor" href="#using-the-store" aria-hidden="true">#</a> Using the store</h2><h3 id="setting-and-retrieving" tabindex="-1"><a class="header-anchor" href="#setting-and-retrieving" aria-hidden="true">#</a> Setting and retrieving</h3><p>Set and retrieve a value for a key using <code>scrt set</code> and <code>scrt get</code></p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt <span class="token builtin class-name">set</span> hello <span class="token string">&#39;World!&#39;</span>
scrt get hello

<span class="token comment"># Output: World!</span>
</code></pre></div><h3 id="adding-more-secrets" tabindex="-1"><a class="header-anchor" href="#adding-more-secrets" aria-hidden="true">#</a> Adding more secrets</h3><p>Add another secret by using <code>scrt set</code> for another key</p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt <span class="token builtin class-name">set</span> barbes <span class="token string">&#39;rochechouart&#39;</span>
scrt get barbes

<span class="token comment"># Output: rochechouart</span>
</code></pre></div><h3 id="updating" tabindex="-1"><a class="header-anchor" href="#updating" aria-hidden="true">#</a> Updating</h3><p>Update a secret with <code>scrt set</code> for an existing key</p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt <span class="token builtin class-name">set</span> hello <span class="token string">&#39;Brooklyn&#39;</span>
scrt get hello

<span class="token comment"># Output: Brooklyn</span>
</code></pre></div><h3 id="deleting" tabindex="-1"><a class="header-anchor" href="#deleting" aria-hidden="true">#</a> Deleting</h3><p>Delete a secret with <code>scrt unset</code></p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt <span class="token builtin class-name">unset</span> hello
scrt get hello

<span class="token comment"># Error: no value for key: &quot;hello&quot;</span>
</code></pre></div><h4 id="related-pages-2" tabindex="-1"><a class="header-anchor" href="#related-pages-2" aria-hidden="true">#</a> Related pages</h4>`,14),A=a("Reference > Commands > set"),L=a("Reference > Commands > get"),N=a("Reference > Commands > unset"),G=o(`<h2 id="getting-help" tabindex="-1"><a class="header-anchor" href="#getting-help" aria-hidden="true">#</a> Getting help</h2><p>Get more information about scrt commands with</p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt --help
</code></pre></div><h3 id="storage-options" tabindex="-1"><a class="header-anchor" href="#storage-options" aria-hidden="true">#</a> Storage options</h3><p>scrt supports several storage backends. Find out more about the storage options with</p><div class="language-bash ext-sh"><pre class="language-bash"><code>scrt storage
</code></pre></div><h4 id="related-pages-3" tabindex="-1"><a class="header-anchor" href="#related-pages-3" aria-hidden="true">#</a> Related pages</h4>`,7),O=a("Reference > Storage > Local"),B=a("Reference > Storage > S3"),E=a("Reference > Storage > Git");function z(V,W){const i=r("ExternalLinkIcon"),t=r("RouterLink");return c(),d("div",null,[p,e("p",null,[u,g,_,e("a",f,[m,s(i)]),b]),k,v,e("ul",null,[e("li",null,[s(t,{to:"/reference/commands/init.html"},{default:n(()=>[x]),_:1})])]),w,e("p",null,[y,s(t,{to:"/guide/configuration.html"},{default:n(()=>[R]),_:1}),S]),C,e("ul",null,[e("li",null,[s(t,{to:"/reference/configuration/"},{default:n(()=>[T]),_:1})])]),I,e("ul",null,[e("li",null,[s(t,{to:"/reference/commands/set.html"},{default:n(()=>[A]),_:1})]),e("li",null,[s(t,{to:"/reference/commands/get.html"},{default:n(()=>[L]),_:1})]),e("li",null,[s(t,{to:"/reference/commands/unset.html"},{default:n(()=>[N]),_:1})])]),G,e("ul",null,[e("li",null,[s(t,{to:"/reference/storage/local.html"},{default:n(()=>[O]),_:1})]),e("li",null,[s(t,{to:"/reference/storage/s3.html"},{default:n(()=>[B]),_:1})]),e("li",null,[s(t,{to:"/reference/storage/git.html"},{default:n(()=>[E]),_:1})])])])}var U=l(h,[["render",z],["__file","getting-started.html.vue"]]);export{U as default};
